@name OpenControl/controlstand-aarlogic
@inputs ControlStand:entity Pod:entity BrakeCutout UsingRearSeat InsertReverser Horn [LOCOMOTIVE_DATA CONFIGURATION_DATA]:array [CONFIGURATION_CONTROL_DATA CONFIGURATION_ROUTING_DATA]:table
@outputs [CONTROL_STAND_DATA]:array ReverserRemoved Reverser Notch DynamicNotch DynamicsPowerZone Routing:table
@persist [Driver DriverOld]:entity DriverQ Routing:table Controls:table Shift:string
@persist InServiceZone LocalEmergency BrakeNotch ServiceZone AutomaticPressureSet Suppression Emergency Independent_Bail
@persist ReverserF ReverserB IncreaseThrottle DecreaseThrottle IncreaseDynamics DecreaseDynamics IncreaseTrainBrake DecreaseTrainBrake IncreaseLocoBrake DecreaseLocoBrake SelectorUp SelectorDown
@persist HandBrake Sander ServiceHiss ServiceRelease IndHiss IndRelease EmergRelease LocoBrakePOS NumberOfNotches EmergencyBrake
@persist Notch UnNotchThrottleF UnNotchThrottleB Reverser HornPullcord DynamicNotch DynamicsSetup DynamicsPowerZone DynamicUnlock
@trigger none 
@model

CONTROL_STAND_DATA = array(IncreaseTrainBrake,DecreaseTrainBrake,BrakeNotch,AutomaticPressureSet,Suppression,Emergency,BrakeCutout,IncreaseLocoBrake,DecreaseLocoBrake,Independent_Bail,EmergencyBrake,
DynamicNotch,DynamicsSetup,DynamicsPowerZone,DynamicUnlock)

if(dupefinished() | duped()){ reset() }
if(first()){ 
Controls = CONFIGURATION_CONTROL_DATA 
Routing = CONFIGURATION_ROUTING_DATA

ServiceHiss = 1
ServiceRelease = 1
IndHiss = 1
IndRelease = 1
EmergRelease = 0
LocoBrakePOS = LOCOMOTIVE_DATA[4,number]


Notch = 0
UnNotchThrottleF = 0
UnNotchThrottleB = 0

DynamicNotch = 0
DynamicsSetup = 0
DynamicsPowerZone = 0
DynamicUnlock = 0

NumberOfNotches = 8

HornPullcord = 0

#CONFIGURATION_DATA = array(Controls,Shift,LeverBased,ReverserF,ReverserN,ReverserR,ThrottleAdvance,ThrottleRetreat
#,DynamicThrottleAdvance,DynamicThrottleRetreat,Compressor_CFM,MainReservoirVolume,CompressorStart,CompressorShutdown,
#AutomaticApply,AutomaticRelease,AutomaticEmergency,AutomaticEmergencyRelease,IndependentApply,IndependentRelease,IndependentBailOn,IndependentBailOff)
}
runOnKeys(Driver,1) 
interval(150)

local Driver = noentity()
local PodDriver = Pod:driver()
Driver = Pod:driver()
if(Driver & !DriverQ){
    DriverQ = 1
    runOnKeys(Driver,1)
}elseif(!Driver & DriverQ){
    DriverQ = 0
    runOnKeys(DriverOld,0)
}
DriverOld = Driver

if(Driver!=noentity()){
    if(keyClk(Driver)){
        local Shifting = Driver:keyPressed(CONFIGURATION_DATA[1,string])
        UseButton = Driver:keyPressed(Controls["UseButton",string]) & (Routing["UseButton",number] ? Shifting : !Shifting)
        
        if(!UseButton){
            local RF = UsingRearSeat ? "ReverserB" : "ReverserF"
            local RB = UsingRearSeat ? "ReverserF" : "ReverserB"
            
            ReverserF = Driver:keyPressed(Controls[RF,string]) & (Routing[RF,number] ? Shifting : !Shifting)
            ReverserB = Driver:keyPressed(Controls[RB,string]) & (Routing[RB,number] ? Shifting : !Shifting)
            
            IncreaseThrottle = Driver:keyPressed(Controls["IncreaseThrottle",string]) & (Routing["IncreaseThrottle",number] ? Shifting : !Shifting)
            DecreaseThrottle = Driver:keyPressed(Controls["DecreaseThrottle",string]) & (Routing["DecreaseThrottle",number] ? Shifting : !Shifting)
            
            IncreaseDynamics = Driver:keyPressed(Controls["IncreaseDynamics",string]) & (Routing["IncreaseDynamics",number] ? Shifting : !Shifting)
            DecreaseDynamics = Driver:keyPressed(Controls["DecreaseDynamics",string]) & (Routing["DecreaseDynamics",number] ? Shifting : !Shifting)
            
            IncreaseTrainBrake = Driver:keyPressed(Controls["IncreaseTrainBrake",string]) & (Routing["IncreaseTrainBrake",number] ? Shifting : !Shifting)
            DecreaseTrainBrake = Driver:keyPressed(Controls["DecreaseTrainBrake",string]) & (Routing["DecreaseTrainBrake",number] ? Shifting : !Shifting)
            
            IncreaseLocoBrake = Driver:keyPressed(Controls["IncreaseLocoBrake",string]) & (Routing["IncreaseLocoBrake",number] ? Shifting : !Shifting)
            DecreaseLocoBrake = Driver:keyPressed(Controls["DecreaseLocoBrake",string]) & (Routing["DecreaseLocoBrake",number] ? Shifting : !Shifting)
            Independent_Bail = Driver:keyPressed(Controls["BailLocoBrake",string]) & (Routing["BailLocoBrake",number] ? Shifting : !Shifting)
            
            HandBrake = Driver:keyPressed(Controls["HandBrake",string]) & (Routing["HandBrake",number] ? Shifting : !Shifting)
            Sander = Driver:keyPressed(Controls["Sander",string]) & (Routing["Sander",number] ? Shifting : !Shifting)
            
            SelectorUp = Driver:keyPressed(Controls["SelectorUp",string]) & (Routing["SelectorUp",number] ? Shifting : !Shifting)
            SelectorDown = Driver:keyPressed(Controls["SelectorDown",string]) & (Routing["SelectorDown",number] ? Shifting : !Shifting)
        }
    }
}

if(Horn == 0.5 & !HornPullcord){
    ControlStand:setBodygroup(6,1)    
}
elseif(Horn == 1 & !HornPullcord){
    ControlStand:setBodygroup(6,2)    
}
elseif(HornPullcord == 1 & !HornPullcord){
    ControlStand:setBodygroup(6,3)    
}
elseif(Horn == 0 & !HornPullcord){
    ControlStand:setBodygroup(6,0)    
}

if(InsertReverser){
    if(Notch == 0 & DynamicNotch == 0){
        if(changed(ReverserF)&ReverserF){
            if(Reverser<1){
                Reverser += 1  
            }
        }
        elseif(changed(ReverserB)&ReverserB){
            if(Reverser>-1){
                Reverser -= 1  
            }
        }
    }
}

if(InsertReverser){
    ControlStand:setBodygroup(1,2+Reverser)
    ReverserRemoved = 0
}
elseif(!InsertReverser & Reverser!=0){
    ControlStand:setBodygroup(1,2+Reverser)    
    ReverserRemoved = 0
}
elseif(!InsertReverser & Reverser == 0){
    ControlStand:setBodygroup(1,0)   
    ReverserRemoved = 1 
}

if(DynamicNotch == 0){
    if(changed(IncreaseThrottle & !UnNotchThrottleF)&IncreaseThrottle & !UnNotchThrottleF){
        timer("throttlemoveF",400)    
    }
    elseif(changed(DecreaseThrottle & !UnNotchThrottleB)&DecreaseThrottle & !UnNotchThrottleB){
        timer("throttlemoveB",400)    
    }
    
    if(clk("throttlemoveF") & IncreaseThrottle){
        UnNotchThrottleF = 1   
        stoptimer("throttlemoveF")
    }
    elseif(clk("throttlemoveB") & DecreaseThrottle){
        UnNotchThrottleB = 1   
        stoptimer("throttlemoveB")
    }
    
    if(!IncreaseThrottle & UnNotchThrottleF){
        UnNotchThrottleF = 0    
    }
    elseif(!DecreaseThrottle & UnNotchThrottleB){
        UnNotchThrottleB = 0    
    }
    
    if(!UnNotchThrottleF & !UnNotchThrottleB){
        if(changed(IncreaseThrottle)&IncreaseThrottle){
            if(Notch<NumberOfNotches){
                Notch += 1    
            } 
        }
        elseif(changed(DecreaseThrottle)&DecreaseThrottle){
            if(Notch>0){
                Notch -= 1    
            }
        }
    }
    else{#if(UnNotchThrottleF | UnNotchThrottleB){
        if(UnNotchThrottleF){
            if(IncreaseThrottle){
                if(Notch<NumberOfNotches){
                    Notch += 1    
                } 
            }
        }
        elseif(UnNotchThrottleB){
            if(DecreaseThrottle){
                if(Notch>0){
                    Notch -= 1    
                }
            }
        }
    }
}

ControlStand:setBodygroup(2,Notch)

if(Reverser!=0){
    if(Notch == 0){
        if(changed(IncreaseDynamics)&IncreaseDynamics){
            if(DynamicNotch<2 & DynamicsPowerZone == 0){
                DynamicNotch += 1
            }
        }
        if(changed(DecreaseDynamics)&DecreaseDynamics){
            if(DynamicNotch>0 & DynamicsPowerZone == 0){
                DynamicNotch -= 1
            }
        }
        if(DynamicNotch == 2){
            DynamicUnlock = 1
            if(IncreaseDynamics){
                if(DynamicsPowerZone<80){
                    DynamicsPowerZone += 1 
                }
            }
            elseif(DecreaseDynamics){
                if(DynamicsPowerZone>0){
                    DynamicsPowerZone -= 1 
                }
            }
        }
        if(DynamicNotch == 1){
            DynamicsSetup = 1    
        }
        elseif(DynamicNotch == 0){
            DynamicsSetup = 0    
        }
        
        if(DynamicsPowerZone == 0){
            DynamicUnlock = 0   
        }
    }   
}

ControlStand:setBodygroup(3,3+DynamicNotch+((DynamicsPowerZone/10)-3))    

if(CONFIGURATION_DATA[22,number]<2){
    if(ServiceZone==20 & DecreaseTrainBrake & BrakeNotch == 2){
        InServiceZone = 1
    }

    if(!InServiceZone){
        if(changed(IncreaseTrainBrake & BrakeNotch<5)&IncreaseTrainBrake & BrakeNotch<5){
            BrakeNotch += 1    
        }
        
        if(changed(DecreaseTrainBrake & BrakeNotch>0)&DecreaseTrainBrake & BrakeNotch>0){
            BrakeNotch -= 1   
        }
    }

    if(BrakeNotch == 2){
        InServiceZone = 1
        
        if(IncreaseTrainBrake & ServiceZone<20){
            ServiceZone += 1
        }
        if(DecreaseTrainBrake & ServiceZone>0){
            ServiceZone -= 1
        }
    }

    if(ServiceZone==20){
        InServiceZone = 0
    }
    elseif(ServiceZone==0){
        InServiceZone = 0
    }
}
elseif(CONFIGURATION_DATA[22,number] == 2){
    if(changed(IncreaseTrainBrake & BrakeNotch<4)&IncreaseTrainBrake & BrakeNotch<4){
        BrakeNotch += 1    
    }
    
    if(changed(DecreaseTrainBrake & BrakeNotch>0)&DecreaseTrainBrake & BrakeNotch>0){
        BrakeNotch -= 1   
    }
}

if(CONFIGURATION_DATA[22,number]<2){
    switch(BrakeNotch){
        case 0,
            ControlStand:setBodygroup(4,0)
            AutomaticPressureSet = 90
            Suppression = 0
        break
        case 1,
            ControlStand:setBodygroup(4,1)
            AutomaticPressureSet = 80
            Suppression = 0
        break
        case 2,
            ControlStand:setBodygroup(4,2+round((ServiceZone*(50/20))/10))
            AutomaticPressureSet = 80-ServiceZone
            Suppression = 0
        break
        case 3,
            ControlStand:setBodygroup(4,8)
            if(!LocalEmergency){
                Suppression = 1
            }
        break
        case 4,
            ControlStand:setBodygroup(4,10)
            Suppression = 0
            if(BrakeCutout<1){
            AutomaticPressureSet = 0
            }
        break
        case 5,
            ControlStand:setBodygroup(4,11)
            AutomaticPressureSet = 0
            LocalEmergency = 1
            Suppression = 1
            Emergency = 1
        break
    }
}
elseif(CONFIGURATION_DATA[22,number] == 2){
    switch(BrakeNotch){
        case 0,
            ControlStand:setBodygroup(4,0)
            AutomaticPressureSet = 90
            Suppression = 0
        break
        case 1,
            ControlStand:setBodygroup(4,1)
            AutomaticPressureSet = AutomaticPressureSet
            Suppression = 0
        break
        case 2,
            ControlStand:setBodygroup(4,2)
            AutomaticPressureSet = AutomaticPressureSet
            Suppression = 0
        break
        case 3,
            ControlStand:setBodygroup(4,8)
            AutomaticPressureSet = 60
            Suppression = 0
        break
        case 4,
            ControlStand:setBodygroup(4,11)
            AutomaticPressureSet = 0
            LocalEmergency = 1
            Suppression = 1
            Emergency = 1
            EmergencyBrake = 1
        break
    }
}

if(IncreaseLocoBrake & LocoBrakePOS<65){
    LocoBrakePOS += 2   
}
elseif(DecreaseLocoBrake & LocoBrakePOS>0){
    LocoBrakePOS -= 2    
}

if(LocoBrakePOS<0){
LocoBrakePOS = 0   
}

if(!Independent_Bail){
    ControlStand:setBodygroup(5,1+LocoBrakePOS/10)
}
elseif(Independent_Bail){
    ControlStand:setBodygroup(5,0)
    if(LocoBrakePOS>LOCOMOTIVE_DATA[4,number]){
        LocoBrakePOS = LOCOMOTIVE_DATA[4,number]
    }
}

if(CONFIGURATION_DATA[22,number]<2){
    if(BrakeCutout>0){ 
        if(!EmergencyBrake){
            
            if(ServiceHiss){
                if(changed(BrakeNotch & IncreaseTrainBrake)&BrakeNotch & IncreaseTrainBrake){
                    soundPlay("servicehiss",0,CONFIGURATION_DATA[14,string])
                    soundStop("servicerelease",1)
                    timer("servicehissRLA",7000)
                    ServiceHiss = 0
                }
            }
            if(changed(clk("servicehissRLA"))&clk("servicehissRLA")){
                ServiceHiss = 1 
                stoptimer("servicehissRLA")
            }

            if(ServiceRelease){
                if(changed(BrakeNotch & DecreaseTrainBrake)&BrakeNotch & DecreaseTrainBrake){
                    soundPlay("servicerelease",0,CONFIGURATION_DATA[15,string])
                    soundStop("servicehiss",1)
                    timer("servicehissRLB",7000)
                    ServiceRelease = 0
                }
            }
            if(changed(clk("servicehissRLB"))&clk("servicehissRLB")){
                ServiceRelease = 1
                stoptimer("servicehissRLB")
            }
        }
        elseif(EmergencyBrake){
            if(changed(EmergencyBrake)&EmergencyBrake){
                soundPlay("emrgapply",0,CONFIGURATION_DATA[16,string])   
                EmergRelease = 2
            }    
        }

        if(EmergRelease == 2){
            if(changed(BrakeNotch<5)&BrakeNotch<5){
                EmergRelease = 1
            }
        }
        
        if(changed(EmergRelease)&EmergRelease){
            soundPlay("emrgrelease",0,CONFIGURATION_DATA[17,string])
        } 
    }
}
elseif(CONFIGURATION_DATA[22,number] == 2){
    if(BrakeCutout>0){ 
        if(!EmergencyBrake){
            
            if(ServiceHiss){
                if(changed(BrakeNotch & IncreaseTrainBrake)&BrakeNotch & IncreaseTrainBrake){
                    soundPlay("servicehiss",0,CONFIGURATION_DATA[14,string])
                    soundStop("servicerelease",1)
                    timer("servicehissRLA",7000)
                    ServiceHiss = 0
                }
            }
            if(changed(clk("servicehissRLA"))&clk("servicehissRLA")){
                ServiceHiss = 1 
                stoptimer("servicehissRLA")
            }

            if(ServiceRelease){
                if(changed(BrakeNotch & DecreaseTrainBrake)&BrakeNotch & DecreaseTrainBrake){
                    soundPlay("servicerelease",0,CONFIGURATION_DATA[15,string])
                    soundStop("servicehiss",1)
                    timer("servicehissRLB",7000)
                    ServiceRelease = 0
                }
            }
            if(changed(clk("servicehissRLB"))&clk("servicehissRLB")){
                ServiceRelease = 1
                stoptimer("servicehissRLB")
            }
        }
        elseif(EmergencyBrake){
            if(changed(EmergencyBrake)&EmergencyBrake){
                soundPlay("emrgapply",0,CONFIGURATION_DATA[16,string])   
                EmergRelease = 2
            }    
        }

        if(EmergRelease == 2){
            if(changed(BrakeNotch<4)&BrakeNotch<4){
                EmergRelease = 1
            }
        }
        
        if(changed(EmergRelease)&EmergRelease){
            soundPlay("emrgrelease",0,CONFIGURATION_DATA[17,string])
        } 
    }
}

if(changed(Independent_Bail)&Independent_Bail){
    soundPlay("indbailoff",0,CONFIGURATION_DATA[20,string])
}
elseif(changed(Independent_Bail)&!Independent_Bail){
    soundPlay("indbailon",0,CONFIGURATION_DATA[21,string])    
}

if(CONFIGURATION_DATA[23,number] == 0){
    if(!Independent_Bail){
        if(LOCOMOTIVE_DATA[4,number]<65){
            if(IndHiss){
                if(changed(IncreaseLocoBrake)&IncreaseLocoBrake){
                    soundPlay("indhiss",0,CONFIGURATION_DATA[18,string])
                    soundStop("indrelease",1)
                    timer("indhissRLA",1000)
                    IndHiss = 0
                }
            }
            if(changed(clk("indhissRLA"))&clk("indhissRLA")){
                IndHiss = 1 
                stoptimer("indhissRLA")
            }
        }
        if(LOCOMOTIVE_DATA[4,number]>0){ 
            if(IndRelease){
                if(changed(DecreaseLocoBrake)&DecreaseLocoBrake){
                    soundPlay("indrelease",0,CONFIGURATION_DATA[19,string])
                    soundStop("indhiss",1)
                    timer("indhissRLB",1000)
                    IndRelease = 0
                }
            }
            if(changed(clk("indhissRLB"))&clk("indhissRLB")){
                IndRelease = 1
                stoptimer("indhissRLB")
            }
        }
    }
}
elseif(CONFIGURATION_DATA[23,number] == 1){
    if(!Independent_Bail){
        if(LOCOMOTIVE_DATA[7,number]!=1){
            if(LOCOMOTIVE_DATA[4,number]<65){
                if(IndHiss){
                    if(changed(IncreaseLocoBrake)&IncreaseLocoBrake){
                        soundPlay("indhiss",0,CONFIGURATION_DATA[18,string])
                        soundStop("indrelease",1)
                        timer("indhissRLA",1000)
                        IndHiss = 0
                    }
                }
                if(changed(clk("indhissRLA"))&clk("indhissRLA")){
                    IndHiss = 1 
                    stoptimer("indhissRLA")
                }
            }
            if(LOCOMOTIVE_DATA[4,number]>0){ 
                if(IndRelease){
                    if(changed(DecreaseLocoBrake)&DecreaseLocoBrake){
                        soundPlay("indrelease",0,CONFIGURATION_DATA[19,string])
                        soundStop("indhiss",1)
                        timer("indhissRLB",1000)
                        IndRelease = 0
                    }
                }
                if(changed(clk("indhissRLB"))&clk("indhissRLB")){
                    IndRelease = 1
                    stoptimer("indhissRLB")
                }
            }
        }
    }
}



if(changed(LocalEmergency & BrakeNotch<2)&LocalEmergency & BrakeNotch<2){
    timer("emrgtimeout",60000)    
    EmergencyBrake = 0
}

if(clk("emrgtimeout")){
    LocalEmergency = 0
    stoptimer("emrgtimeout")
}

if(LocalEmergency == 0 & BrakeNotch<2){
    Emergency = 0
}
